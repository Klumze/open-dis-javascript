***************
*** 42,47 ****
            outputStream.writeByte(this.characters[ idx ] );
         }
    };
  }; // end of class
  
   // node.js module support
--- 42,94 ----
            outputStream.writeByte(this.characters[ idx ] );
         }
    };
+ 
+   /*
+    * Returns the byte array marking, in string format.
+    * @return string format marking characters
+    */
+   dis.EntityMarking.prototype.getMarking = function()
+   {
+       var marking = "";
+       for(var idx = 0; idx < 11; idx++)
+       {
+           marking = marking + String.fromCharCode(this.characters[idx]);
+       }
+ 
+       return marking;
+   };
+ 
+ /**
+    * Given a string format marking, sets the bytes of the marking object
+    * to the appropriate character values. Clamps the string to no more
+    * than 11 characters.
+    *
+    * @param {String} newMarking string format marking
+    * @returns {nothing}
+    */
+   dis.EntityMarking.prototype.setMarking = function(newMarking)
+   {
+       var stringLen = newMarking.length;
+       if(stringLen > 11)
+           stringLen = 11;
+ 
+       // Copy over up to 11 characters from the string to the array
+       var charsCopied = 0;
+       while(charsCopied < stringLen)
+       {
+           this.characters[charsCopied] = newMarking.charCodeAt( charsCopied );
+           charsCopied++;
+       }
+ 
+       // Zero-fill the remainer of the character array
+       while(charsCopied < 11)
+       {
+           this.characters[ charsCopied ] = 0;
+           charsCopied++;
+       }
+ 
+   };
+ 
  }; // end of class
  
   // node.js module support
