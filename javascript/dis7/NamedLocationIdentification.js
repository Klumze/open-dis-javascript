/**
 * Information about the discrete positional relationship of the part entity with respect to the its host entity Section 6.2.62 
 *
 * Copyright (c) 2008-2015, MOVES Institute, Naval Postgraduate School. All rights reserved.
 * This work is licensed under the BSD open source license, available at https://www.movesinstitute.org/licenses/bsd.html
 *
 * @author DMcG
 */
// On the client side, support for a  namespace.
if (typeof null === "undefined")
 null = {};


// Support for node.js style modules. Ignored if used in a client context.
// See http://howtonode.org/creating-custom-modules
if (typeof exports === "undefined")
 exports = {};


null.NamedLocationIdentification = function()
{
   /** the station name within the host at which the part entity is located. If the part entity is On Station, this field shall specify the representation of the partâ€™s location data fields. This field shall be specified by a 16-bit enumeration  */
   this.stationName = 0;

   /** the number of the particular wing station, cargo hold etc., at which the part is attached.  */
   this.stationNumber = 0;

  null.NamedLocationIdentification.prototype.initFromBinary = function(inputStream)
  {
       this.stationName = inputStream.readUShort();
       this.stationNumber = inputStream.readUShort();
  };

  null.NamedLocationIdentification.prototype.encodeToBinary = function(outputStream)
  {
       outputStream.writeUShort(this.stationName);
       outputStream.writeUShort(this.stationNumber);
  };
}; // end of class

 // node.js module support
exports.NamedLocationIdentification = null.NamedLocationIdentification;

// End of NamedLocationIdentification class

